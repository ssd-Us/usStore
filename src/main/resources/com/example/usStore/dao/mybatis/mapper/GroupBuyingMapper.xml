<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.usStore.dao.mybatis.mapper.GroupBuyingMapper">
  <cache />
   <delete id="deleteItem" parameterType="String">
     DELETE ITEM
     FROM ITEM
     WHERE ITEMID = #{itemId}
  </delete>
  
	<insert id="insertGroupBuying" parameterType="GroupBuying">
    INSERT INTO GroupBuying
      (ITEMID, DISCOUNT, LISTPRICE, DEADLINE)
    VALUES
      (#{itemId}, #{discount}, #{listPrice}, #{deadLine})
  </insert>
	
	<update id="updateGroupBuying" parameterType="GroupBuying">
		UPDATE AUCTION 
  		SET DISCOUNT = #{discount}, LISTPRICE = #{listPrice}, DEADLINE = #{deadLine}
  		WHERE ITEMID = #{itemId}
	</update>
	
	<select id="getGroupBuyingById" parameterType="int">
	SELECT
      	I.ITEMID,
		I.UNITCOST,
		I.TITLE,
	 	I.DESCRIPTION,
   		I.VIEWCOUNT,
	    I.SUPPID,
	    I.TAGID,
		I.QTY,
	    I.USERID,
	  	I.PRODUCTID,
	    G.DISCOUNT,
     	G.LISTPRICE,
     	G.DEADLINE
    FROM GROUPBUYING G, ITEM I
	WHERE G.ITEMID = I.ITEMID
	    	AND I.ITEMID = #{itemId}
	</select>

	<!-- //모든 공동구매 리스트 가져오는 메소드-->
	<select id="getGroupBuyingList" resultType="GroupBuying">
	    SELECT I.PRODUCTID, I.ITEMID, I.TITLE, I.QTY, I.UNITCOST, G.DISCOUNT, G.LISTPRICE, G.DEADLINE
	    FROM ITEM I, GROUPBUYING G
	    WHERE G.ITEMID = I.ITEMID
	</select>
	
	<!-- //공동구매 할인 계산 메소드
 	public void calculateDiscount(GroupBuying GroupBuying) throws DataAccessException;	//할인율 계산 -->
	<!-- <update id="calculateDiscount" parameterType="GroupBuying">
		UPDATE GroupBuying
		SET DISCOUNT = #{(unitCost - discount) / unitCost}	할인율 계산식
		WHERE ITEMID = #{itemId};
	</update> -->
</mapper>